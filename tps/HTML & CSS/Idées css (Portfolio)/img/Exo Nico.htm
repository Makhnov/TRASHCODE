<!DOCTYPE html>
<html lang="fr"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>Exo Nico</title>

    <meta name="author" content="Nico M">
    <meta name="description" content="TP2._JS">

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="Exo%20Nico_fichiers/style.css">
    <link rel="icon" type="image/x-icon" href="http://127.0.0.1:5500/5_Exercices_En_Cours_Formation/JS/TP%202.5/img/favicon.ico">

</head>

<body onload="setup()">
    <div id="ajoutBar">
        <input id="ajout" type="text" placeholder="Ajouter..." value="2">
        <div class="gap"></div>
        <div id="add" onclick="add()">+</div>
    </div>

    <div id="scene">
        <div id="task">
        <div><span>2</span><button onclick="deleteTask(this)">+</button></div><div><span>2</span><button onclick="deleteTask(this)">+</button></div></div>
    </div>

    <script src="Exo%20Nico_fichiers/script.js"></script>
    <script src="Exo%20Nico_fichiers/cookies.js"></script>
<!-- Code injected by live-server -->
<script>
	// <![CDATA[  <-- For SVG support
	if ('WebSocket' in window) {
		(function () {
			function refreshCSS() {
				var sheets = [].slice.call(document.getElementsByTagName("link"));
				var head = document.getElementsByTagName("head")[0];
				for (var i = 0; i < sheets.length; ++i) {
					var elem = sheets[i];
					var parent = elem.parentElement || head;
					parent.removeChild(elem);
					var rel = elem.rel;
					if (elem.href && typeof rel != "string" || rel.length == 0 || rel.toLowerCase() == "stylesheet") {
						var url = elem.href.replace(/(&|\?)_cacheOverride=\d+/, '');
						elem.href = url + (url.indexOf('?') >= 0 ? '&' : '?') + '_cacheOverride=' + (new Date().valueOf());
					}
					parent.appendChild(elem);
				}
			}
			var protocol = window.location.protocol === 'http:' ? 'ws://' : 'wss://';
			var address = protocol + window.location.host + window.location.pathname + '/ws';
			var socket = new WebSocket(address);
			socket.onmessage = function (msg) {
				if (msg.data == 'reload') window.location.reload();
				else if (msg.data == 'refreshcss') refreshCSS();
			};
			if (sessionStorage && !sessionStorage.getItem('IsThisFirstTime_Log_From_LiveServer')) {
				console.log('Live reload enabled.');
				sessionStorage.setItem('IsThisFirstTime_Log_From_LiveServer', true);
			}
		})();
	}
	else {
		console.error('Upgrade your browser. This Browser is NOT supported WebSocket for Live-Reloading.');
	}
	// ]]>
</script>


</body></html>